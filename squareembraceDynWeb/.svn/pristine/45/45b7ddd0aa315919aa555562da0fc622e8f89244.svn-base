
var sqrm = sqrm || {};

(function(sqrm) {

   var URL = "http://localhost:8080/sqrm/rest/";
   
   sqrm.submitForm = function(formName)
   {
      try
      {
         console.log("submitForm : " + formName);
         var frm = $('#'+formName);
         var id = null;
         var title = null;
         var body = frm.find("textarea").val();
         var note = null;
         var tags = [];
 
         frm.find(":input").map(function(i,e) {
            console.log(i);
            console.log(e);
            if ($(this).attr("type")=="hidden" && $(this).attr("name")=="id")
            {
               id = $(this).val();
            }
            else if ($(this).attr("type")=="text")
            {
               if ($(this).attr("name")=="title") title = $(this).val();
               else if ($(this).attr("name")=="note") note = $(this).val();
               else tags.push({ name: $(this).attr("name"), value: $(this).val() });
            }
         });

         console.log("id = \"" + id + "\"");
         console.log("title = " + title);
         console.log("body = ");
         console.log(body);
         console.log("note = " + note);
         console.log("tags = ");
         for ( var t=0 ; t<tags.length ; t++ ) console.log(tags[t]);
         
         if (id==null)
         {
            // create
            sqrm.create(title,body,tags,note,function(data) {
               console.log("creation success");
               console.log(data);
            },function(error) {
               console.log("creation failed");
               console.log(error);
            });
         }
         else
         {
            // update
            sqrm.update(id,title,body,tags,note,function(data) {
               console.log("updpate success");
               console.log(data);
            },function(error) {
               console.log("update failed");
               console.log(error);
            });
         }
      }
      catch (e)
      {
         console.log(e);
      }
   };

   sqrm.open = function(link,target)
   {
      if (!target) window.location = link;
   };

   sqrm.get = function(id,cb,errCb)
   {
     $.ajax({
       type: 'GET',
       url: URL + "wiki/"+id,
       dataType: 'json',
       error: function(request,textStatus,error) {
          if (errCb)
          {
             try
             {
                errCb(error);
             }
             catch (e)
             {
                console.log(e);
             }
          }
          else
             {
             console.log("get " + id + " failed: " + textStatus);
             console.log(error);
             }
       },
       success: function(data,textStatus,request) {
          if (cb)
          {
             try
             {
                cb(data);
             }
             catch (e)
             {
                console.log(e);
             }
          }
          else
          {
          console.log("get " + id + " succeeded: " + textStatus);
          }
       }
     });
   };

   sqrm.create = function(title,body,tags,note,cb,errCb)
   {      
      var request = JSON.stringify({
         title: title,
         body: body,
         tags: tags,
         note: note });
      
      $.ajax({
         url: URL + "wiki",
         type: "POST",
         data: request,
         contentType: "application/json; charset=utf-8",
         dataType: "json",
         error: function(request,textStatus,error) {
            if (errCb)
            {
               try
               {
                  errCb(error);
               }
               catch (e)
               {
                  console.log(e);
               }
            }
         },
         success: function(data,textStatus,request) {
            if (cb)
            {
               try
               {
                  cb(data);
               }
               catch (e)
               {
                  console.log(e);
               }
            }
         }
      });
   };

   sqrm.update = function(id,title,body,tags,note,cb,errCb)
   {
      var request = JSON.stringify({
         title: title,
         body: body,
         tags: tags,
         note: note });
      
      $.ajax({
         url: URL + "wiki/"+id,
         type: "PUT",
         data: request,
         contentType: "application/json; charset=utf-8",
         dataType: "json",
         error: function(request,textStatus,error) {
            if (errCb)
            {
               try
               {
                  errCb(error);
               }
               catch (e)
               {
                  console.log(e);
               }
            }
         },
         success: function(data,textStatus,request) {
            if (cb)
            {
               try
               {
                  cb(data);
               }
               catch (e)
               {
                  console.log(e);
                  console.log(cb);
                  console.log(data);
               }
            }
         }
      });
   
   };

   sqrm.del = function(id,cb,errCb)
   {
     $.ajax({
       type: 'delete',
       url: URL + "wiki/"+id,
       dataType: 'json',
       error: function(request,textStatus,error) {
          if (errCb)
          {
             try
             {
                errCb(error);
             }
             catch (e)
             {
                console.log(e);
             }
          }
       },
       success: function(data,textStatus,request) {
          if (cb)
          {
             try
             {
                cb(data);
             }
             catch (e)
             {
                console.log(e);
             }
          }
       }
     });
   };

   sqrm.search = function(query,cb,errCb)
   {
     $.ajax({
       type: 'get',
       url: URL + "search?q="+query,
       dataType: 'json',
       error: function(request,textStatus,error) {
          if (errCb)
          {
             try
             {
                errCb(error);
             }
             catch (e)
             {
                console.log(e);
             }
          }
       },
       success: function(data,textStatus,request) {
          if (cb)
          {
             try
             {
                cb(data);
             }
             catch (e)
             {
                console.log(e);
             }
          }
       }
     });
   };

   

})(sqrm);
